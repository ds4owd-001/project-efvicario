---
title: "My project"
author: "Elizabeth Vicario"
format:
  html:
    embed-resources: true
editor: visual
execute:
  warning: false
editor_options: 
  chunk_output_type: console
output: html_document
---

# My project

## Analysis goals

With this data, I would like to compare water storage capacity, water shortage coping mechanisms, and struggles with water (using multiple metrics) between communities. I would like to see if a relationship exists between water storage capacity and water struggles.

## Load packages and data

```{r}
library(tidyverse)
library(dplyr)
library(readxl)
library(tidyr)
```

## Read data

```{r}
data <- read_excel("data/raw/r_household_survey_analysis.xlsx")
```

# Data processing

Add columns to the data to represent total household size (adult + child count) and household density (household size / bedrooms).

```{r}

# Add variables I will need

processed_data <- data |> 
  mutate(hh_size = adult_count + child_count,.after=child_count)  |> 
  mutate(density = hh_size / rooms_in_hh,.after =rooms_in_hh)

```

Convert "na" and infinite values to actual NA values, then convert some chr columns to dbl

```{r}

processed_data <- processed_data %>%
  mutate(density = na_if(density,Inf)) %>% 
  mutate(secondary_dw_source = na_if(secondary_dw_source,"na")) %>% 
  mutate(reasons_secondary_dw = na_if(reasons_secondary_dw,"na")) %>% 
  mutate(preferred_brand = na_if(preferred_brand,"na")) %>% 
  mutate(secondary_water_source = na_if(secondary_water_source,"na")) %>% 
  mutate(coping_mechanisms = na_if(coping_mechanisms, "na")) %>% 
#  mutate(time_of_last_coping = na_if(time_of_last_coping,"na")) %>% 
#  leaving this one out because I want to label it and show it in a plot
    mutate(business_type = na_if(business_type,"na")) %>% 
  mutate(daily_hh_water_cost = na_if(daily_hh_water_cost, "na")) %>% 
  mutate(daily_hh_water_cost_phhm = na_if(daily_hh_water_cost_phhm,"na")) 

processed_data$daily_hh_water_cost <- as.numeric(processed_data$daily_hh_water_cost)
processed_data$daily_hh_water_cost_phhm <- as.numeric(processed_data$daily_hh_water_cost_phhm)


```

I thought we needed to pivot data longer but it's actually not very helpful in this case

```{r}
# tibble <- as_tibble(processed_data)
# tibble
# long_data <- processed_data |> 
  # pivot_longer(cols = c(years_in_community, 
    #                    adult_count, 
     #                   child_count, 
      #                  hh_size,
       #                 rooms_in_hh, 
        #                density,
         #               daily_dw_cost_pp,
          #              storage,
           #             days_struggle),
            #   names_to = "dbl_variable",
             #  values_to = "value") 
# write.csv(long_data,"long_data.csv",row.names = TRUE)
```

Create vars with filtered data to get each category, in case I make any combined plots

```{r}

abuja_data <- filter(.data = processed_data,
                    community=="abuja")
kg_data <- filter(.data = processed_data,
                  community == "kg")
```

# Data visualization

Create labels and set orders for variables to be used in plots

```{r}
#Label housing categories
housing_labels <- c("block_unit" = "Unit in concrete\nblock building",
                              "wood_unit" = "Unit in wood\n building",
                              "multistory_apt" = "Unit in multi-story\napt bldg",
                              "compound_house" = "Compound house",
                              "house" = "Single-family house",
                              "wood_shack" = "Wood one-room\nstructure",
                              "other" = "Other dwelling",
                              "no_structure" = "No structure\n/outdoors")


#Set order of housing type categories
processed_data$housing_type <- factor(processed_data$housing_type, 
                                    levels = c("block_unit",
                                                "wood_unit",
                                                "multistory_apt",
                                                "compound_house",
                                                "house",
                                                "wood_shack",
                                                "other",
                                                "no_structure"))

#label tenure status options
tenure_labels <- c("no_payment" = "Living without \n payment",
                              "owned" = "Owner",
                              "rented" = "Paying tenant")

#Set order of tenure status
processed_data$tenure <- factor(processed_data$tenure,
                              levels = c("owned",
                                         "rented",
                                         "no_payment"))

#labels for time of last coping
time_of_coping_labels <- c("last_3_days" = "In the last three days",
                                        "last_7_days" = "In the last week",
                                        "last_30_days" = "In the last month",
                                         "last_year" = "In the last year",
                                         "over_year_ago" = "Over a year ago",
                                         "na" = "Never/cannot remember")

#orders of time of last coping
processed_data$time_of_last_coping <- factor(processed_data$time_of_last_coping,
                                             levels = c("last_3_days",
                                                        "last_7_days",
                                                        "last_30_days",
                                                        "last_year",
                                                        "over_year_ago",
                                                        "na"))

#communities
community_labels <- c("abuja" = "Abuja",
                      "kg" = "Korle Gonno")

```

### Community comparisons: Demographics

Years in community

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = years_in_community,
                       fill = community)) +
  geom_boxplot(varwidth=TRUE,alpha=0.9) +
  labs(title="Years in community",
       x = "Community", 
       y = "Years in community") +
       # caption="" to add a caption
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +
  scale_fill_manual(values = c("coral","darkslategray3")) +
                  #  name="Community",
                   # labels=c("Abuja","Korle Gonno"))
  theme(legend.position = "None")


# Use limits to adjust the which levels (and in what order)
# are displayed with scale_x_discrete
#  + limits = c("Abuja"))

#from: https://ggplot2.tidyverse.org/reference/scale_discrete.html
```

Housing type

```{r}

#create plot
processed_data %>% 
  ggplot(mapping = aes(housing_type)) +
  geom_bar(aes(fill = community)) +  
  theme(axis.text.x = element_text(angle=65, vjust=0.6)) + 
  labs(title="Housing type across communities",
       x = "Housing type", 
       y = "Count") +
  scale_x_discrete("Community",
                   labels = housing_labels
                   ) + #controls x-axis
  scale_fill_manual(values = c("coral","darkslategray3"),
                    name="Community",
                    labels=c("Abuja","Korle Gonno")) #controls legend
    
#    facet_wrap(~community)
```

Tenure status

```{r}
processed_data |> 
  ggplot(mapping=aes(tenure)) +
  geom_bar(aes(fill=community), width = 0.5) + 
  theme(axis.text.x = element_text(angle=65, vjust=0.6)) + 
  labs(title="Tenure status across communities",
       x = "Tenure status",
       y = "Count") + 
  scale_x_discrete("Community",
                   labels = tenure_labels) + #controls x-axis
  scale_fill_manual(values = c("coral","darkslategray3"),
                    name="Community",
                    labels=c("Abuja","Korle Gonno")) #controls legend

#from: https://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html#Histogram
```

Household size

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = hh_size,
                       fill = community)) +
  labs(title="Household size across communities",
       y = "Household size") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None") +
  geom_jitter(mapping = aes(color = community)) +
  geom_boxplot(mapping = aes(alpha = 0.5))
```

Household density

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = density,
                       fill = community)) +
  labs(title="Household density across communities",
       y = "Household density (persons per bedroom)") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None") +
  geom_jitter(mapping = aes(color = community)) +
  geom_boxplot(mapping = aes(alpha = 0.5))
```

### Community comparisons: Water-related

Daily cost of drinking water (for the respondent) - not much variation here

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = daily_dw_cost_pp,
                       fill = community)) +
  labs(title="Drinking water expense across communities",
       y = "Daily drinking water cost") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None") +
  geom_jitter(mapping = aes(color = community)) +
  geom_boxplot(mapping = aes(alpha = 0.5))
```

Daily cost of non-drinking water (per household)

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = daily_hh_water_cost,
                       fill = community)) +
  labs(title="Daily household water expense across communities",
       y = "Daily water cost per household [Gh Cedis]") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None") +
  #geom_violin()
  geom_jitter(mapping = aes(color = community)) +
  geom_boxplot(mapping = aes(alpha = 0.5))


```

daily cost of water (per household member)

*need to convert these to dbl form first! Na_if function --\> change type?*

```{r}

processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = daily_hh_water_cost_phhm,
                       fill = community)) +
  labs(title="Drinking water expense (per hh member)\nacross communities",
       y = "Daily water cost per household member [Gh Cedis]") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None",
        plot.title = element_text(hjust = 0.5)) +
  geom_jitter(mapping = aes(color = community)) +
  geom_boxplot(mapping = aes(alpha = 0.5))
```

Storage

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = storage,
                       fill = community)) +
  labs(title="Household water storage capacity\nacross communities",
       y = "Water storage capacity [liters]") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None",
        plot.title = element_text(hjust = 0.5)) +
  geom_violin() 
#  geom_jitter(mapping = aes(color = community)) +
#  geom_boxplot(mapping = aes(alpha = 0.5))
```

days of struggle per week (could add sample sizes here, and add how many are 0)

```{r}
processed_data |> 
  ggplot(mapping = aes(x=community,
                       y = days_struggle,
                       fill = community)) +
  labs(title="Typical number of weekdays a household struggles\nto find water",
       y = "Typical days of struggle (out of 7)") +
  scale_x_discrete("Community",
                   labels = c("abuja" = "Abuja", 
                              "kg" = "Korle Gonno")) +  
  theme(legend.position = "None",
        plot.title = element_text(hjust = 0.5)) +
  geom_violin()
```

### Compare variables across storage capacities

How does household size relate to storage? (not much)

```{r}
#processed_data |> 
#  ggplot(mapping = aes(x = hh_size,
#                       y = storage,
#                       color = community)) +
#  geom_point()
  #geom_histogram(mapping = aes(x = housing_type))
                               
```

How does storage relate to the number of days of struggle per week?

issue - facet wrap labels

```{r}
community_labels <- c("abuja" = "Abuja",
                      "kg" = "Korle Gonno")
processed_data |> 
  ggplot(mapping = aes(x = storage,
                       y = days_struggle,
                       color = community)) +
  labs(title="Typical number of weekdays a household struggles\nto find water, compared to storage capacity",
       x = "Storage capacity [liters]",
       y = "Typical days of struggle (out of 7)") +  
  theme(legend.position = "None",
        plot.title = element_text(hjust = 0.5)) +
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap("community", 
             ncol = 2)
#             labeller = label_value(community_labels)) #not working, why??

```

How does storage relate to the last day of using a coping mechanism?

Few issues with this plot, why aren't the "na" storage values showing up?

how to add a trend line: with data in wide format, maybe I should manually enter the mean values as a new variable and add it to the plot

fix facet wrap titles

```{r}
#mean_storage <- processed_data |> 
 # group_by(time_of_last_coping)  +
  #summarize(mean_storage = mean(storage[category == "storage"])) 
  
processed_data |> 
  ggplot(mapping = aes(x = time_of_last_coping,
                       y = storage,
                       color = community)) +
  geom_point() + 
  labs(title="Household water storage capacity\nand time of last coping strategy",
       y = "Water storage capacity [liters]") +
  theme(axis.text.x = element_text(angle=65, 
                                   vjust=0.55),
        plot.title = element_text(hjust = 0.5),
        legend.position = "none") +
  scale_x_discrete("Time of last coping mechanism",
                   labels = time_of_coping_labels) + #controls x-axis
#  geom_smooth(y = )
#    method = "lm",
#              se = FALSE) +
  facet_wrap("community", ncol = 2)

```

## Notes

Violin plot vs boxplot.

<https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html>

```{r, include = FALSE}
# Boxplot basic
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
    theme_ipsum() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle("Basic boxplot") +
    xlab("")

# Violin basic
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_violin() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
    theme_ipsum() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle("Violin chart") +
    xlab("")
```
